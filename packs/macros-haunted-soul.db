{"_id":"t02N8BGuZCCpmV1U","name":"Character creation","type":"script","author":"pdXclp2r5tiEF79G","img":"icons/svg/dice-target.svg","scope":"global","command":"const characterGenerator = game.pirateborg.api.characterGenerator;\n\nconst validBaseClasses = selectedClasses.filter((selectedClass) => !selectedClass.data.data.requireBaseClass);\nconst baseClass = validBaseClasses[Math.floor(Math.random() * validBaseClasses.length)];\nconst pirateData = await characterGenerator.rollCharacterForClass(baseClass);\n\nconst startingRollItems = await characterGenerator.rollRollItems(selectedClass.data.data.startingRolls);\nconst startingItems = await game.pirateborg.api.compendium.findItemsFromCompendiumString(selectedClass.data.data.startingItems);\n\nbaseClass.isBaseClass = true;\n\npirateData.items = pirateData.items\n   .filter((item) => item.data.type !== 'class' && item.data.data.isBaseClass !== true)\n   .concat(startingRollItems)\n   .concat(startingItems)\n   .concat([baseClass])\n   .concat([selectedClass]);\n\nconst ailment = pirateData.items.find((item) => item.type === 'feature' && item.featureType === 'Ailment (Haunted Soul)');\n\nselectedClass.data.name = `${selectedClass.data.name} - ${ailment.data.name}`;\npirateData.description = `${selectedClass.data.data.flavorText}${pirateData.description}`\npirateData.actorImg = selectedClass.img;\n\nif (actor) {\n   await characterGenerator.updateActorWithCharacter(actor, pirateData);\n} else {\n   await characterGenerator.createActorWithCharacter(pirateData);\n}","folder":null,"sort":0,"permission":{"default":0,"pdXclp2r5tiEF79G":3},"flags":{"core":{"sourceId":"Macro.smnrajcovGMRvDVa"}}}
{"_id":"t02N8BGuZCCpmV1U","name":"Character creation","type":"script","author":"pdXclp2r5tiEF79G","img":"icons/svg/dice-target.svg","scope":"global","command":"const characterGenerator = game.pirateborg.api.characterGenerator;\n\nconst validBaseClasses = selectedClasses.filter((selectedClass) => !selectedClass.requireBaseClass);\nconst baseClass = validBaseClasses[Math.floor(Math.random() * validBaseClasses.length)];\nconst pirateData = await characterGenerator.rollCharacterForClass(baseClass);\n\nconst startingRollItems = await characterGenerator.rollRollItems(selectedClass.startingRolls);\nconst startingItems = await game.pirateborg.api.compendium.findItemsFromCompendiumString(selectedClass.startingItems);\n\nbaseClass.isBaseClass = true;\n\npirateData.items = pirateData.items\n   .filter((item) => item.type !== 'class' && item.isBaseClass !== true)\n   .concat(startingRollItems)\n   .concat(startingItems)\n   .concat([baseClass])\n   .concat([selectedClass]);\n\nconst ailment = pirateData.items.find((item) => item.type === 'feature' && item.featureType === 'Ailment (Haunted Soul)');\n\nselectedClass.data.name = `${selectedClass.name} - ${ailment.name}`;\npirateData.description = `${selectedClass.flavorText}${pirateData.description}`\npirateData.actorImg = selectedClass.img;\n\nif (actor) {\n   await characterGenerator.updateActorWithCharacter(actor, pirateData);\n} else {\n   await characterGenerator.createActorWithCharacter(pirateData);\n}","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.smnrajcovGMRvDVa"}},"ownership":{"default":0,"pdXclp2r5tiEF79G":3},"_stats":{"systemId":"pirateborg","systemVersion":"v0.4.2","coreVersion":"10.277","createdTime":null,"modifiedTime":1661371326597,"lastModifiedBy":"oExHYumIHtlthjwg"}}
{"_id":"t02N8BGuZCCpmV1U","name":"Character creation","type":"script","author":"pdXclp2r5tiEF79G","img":"icons/svg/dice-target.svg","scope":"global","command":"const characterGenerator = game.pirateborg.api.characterGenerator;\n\nconst validBaseClasses = selectedClasses.filter((selectedClass) => !selectedClass.requireBaseClass);\nconst baseClass = validBaseClasses[Math.floor(Math.random() * validBaseClasses.length)];\nconst pirateData = await characterGenerator.rollCharacterForClass(baseClass);\n\nconst startingRollItems = await characterGenerator.rollRollItems(selectedClass.startingRolls);\nconst startingItems = await game.pirateborg.api.compendium.findItemsFromCompendiumString(selectedClass.startingItems);\n\nbaseClass.isBaseClass = true;\n\npirateData.items = pirateData.items\n   .filter((item) => item.type !== 'class' && item.isBaseClass !== true)\n   .concat(startingRollItems)\n   .concat(startingItems)\n   .concat([baseClass])\n   .concat([selectedClass]);\n\nconst ailment = pirateData.items.find((item) => item.type === 'feature' && item.featureType === 'Ailment (Haunted Soul)');\n\nselectedClass.name = `${selectedClass.name} - ${ailment.name}`;\npirateData.description = `${selectedClass.flavorText}${pirateData.description}`\npirateData.actorImg = selectedClass.img;\n\nif (actor) {\n   await characterGenerator.updateActorWithCharacter(actor, pirateData);\n} else {\n   await characterGenerator.createActorWithCharacter(pirateData);\n}","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.smnrajcovGMRvDVa"}},"ownership":{"default":0,"pdXclp2r5tiEF79G":3},"_stats":{"systemId":"pirateborg","systemVersion":"v0.4.2","coreVersion":"10.277","createdTime":null,"modifiedTime":1661371418664,"lastModifiedBy":"oExHYumIHtlthjwg"}}
